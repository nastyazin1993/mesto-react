{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","method","then","_getResponseData","name","about","body","JSON","stringify","link","id","avatar","authorization","Card","title","likes","src","onCardClick","type","alt","onClick","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","data","card","map","el","_id","catch","err","console","log","key","Footer","PopupWithForm","children","text","isOpen","onClose","value","action","noValidate","ImagePopup","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","handleCardClick","placeholder","defaultValue","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c83b7dfe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n          <div className=\"header__logo\"></div>\r\n        </header>\r\n  );\r\n}\r\n  \r\nexport default Header;","\r\nclass Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  _getResponseData(res){\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status} ....`));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  deleteCard(url) {\r\n    return fetch(`${this._url}cards/` + url, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  patchUserInfo({name, about}) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({name, about}\r\n      \r\n      ),\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  postCard({ name, link }) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      }),\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  getSumLikes() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._url}cards/likes/` + id, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n      \r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  putLike(url) {\r\n    return fetch(`${this._url}cards/likes/` + url, {\r\n      method: \"PUT\",\r\n      headers: this._headers\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  patchUserAvatar({avatar}) {\r\n    return fetch(`${this._url}users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      })\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-15/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    authorization: \"4426ae37-9ae5-4337-9bcb-53d589589107\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\n\r\nfunction Card({ title, likes, src, onCardClick }) {\r\n\r\n    function handleClick() {\r\n        onCardClick({ title, src });\r\n      }\r\n\r\n  return (\r\n    \r\n          <div className=\"element\">\r\n            <button type=\"button\" className=\"element__delete\" ></button>\r\n            <img className=\"element__img\" src={src} alt={title} onClick={handleClick}/>\r\n            <div className=\"element__info\">\r\n                <h2 className=\"element__title\">{title}</h2>\r\n                <div>\r\n                <button type=\"button\" className=\"element__heart\"></button>\r\n                <p className=\"element__sumLike\">{likes.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n  );\r\n \r\n}\r\n  \r\nexport default Card;","import React from 'react';\r\nimport api from '../utils/Api';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState('');\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([ api.getUserInfo(), api.getInitialCards() ])\r\n      .then(([ res, data ]) => {\r\n        setUserName(res.name);\r\n        setUserDescription(res.about);\r\n        setUserAvatar(res.avatar);\r\n\r\n        const card = data.map((el)=>({\r\n          \r\n          title: el.name,\r\n          src: el.link,\r\n          likes: el.likes,\r\n          id: el._id\r\n        })\r\n      )\r\n      setCards(card)\r\n      \r\n    })\r\n              \r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"content\">\r\n          <section className=\"profile\">\r\n            <div className=\"profile__block\">\r\n              <div className=\"profile__avatar-conteiner\" >\r\n                <img\r\n                  className=\"profile__avatar\"\r\n                  src={userAvatar}\r\n                  alt=\"аватар\"\r\n                />\r\n                <div className=\"profile__avatar-overlay\">\r\n                  <img className=\"profile__avatar-icon\" onClick={onEditAvatar}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile__info\">\r\n                <div className=\"profile__container-info\">\r\n                  <h1 className=\"profile__title\">{userName}</h1>\r\n                  <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n                </div>\r\n                <p className=\"profile__subtitle\">{userDescription}</p>\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n          </section>\r\n          <section className=\"elements\">\r\n          \r\n          {cards.map(({id, ...card})=> \r\n          <Card \r\n          key={id} \r\n          {...card} \r\n          onCardClick={onCardClick} \r\n          />\r\n          )}\r\n          \r\n          </section>\r\n        </main>\r\n  );\r\n \r\n}\r\n  \r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy;2020. Mesto Russia</p>\r\n        </footer>\r\n  );\r\n}\r\n  \r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, title, children, text, isOpen, onClose }) {\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen ? 'popup_open' : ''}`}>\r\n        <div className=\"popup__container\">\r\n          <button\r\n            type=\"reset\"\r\n            className=\"popup__close-button\"\r\n            value=\"Закрыть\"\r\n            onClick={onClose}\r\n          ></button>\r\n          <h2 className=\"popup__title\">{title}</h2>\r\n          <form className=\"form\" action=\"#\" name={`${name}`} noValidate>\r\n            {children}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"form__save-button form__save-button_action popup__button_type_confirm\"\r\n              value=\"Сохранить\"\r\n            >\r\n              {text}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n  \r\nexport default PopupWithForm;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction ImagePopup({name, isOpen, onClose, card }) {\r\n\r\n\r\n  return (\r\n    \r\n    <div className={`popup popup_type_${name} ${isOpen ? 'popup_open' : ''}`}>\r\n          <div className=\"popup__container popup__container_open-image\">\r\n            <button\r\n              type=\"reset\"\r\n              className=\"popup__close-button\"\r\n              value=\"Закрыть\"\r\n              onClick={onClose}\r\n            ></button>\r\n            <img className=\"popup__img\" src={card.src} alt={card.title} />\r\n            <h2 className=\"popup__title popup__title_open-image\">{card.title}</h2>\r\n          </div>\r\n        </div>\r\n  );\r\n \r\n}\r\n  \r\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"root\">\n        <div className=\"page\">\n          <Header />\n          <Main \n          onEditAvatar={() => {\n            handleEditAvatarClick();\n          }}\n          onEditProfile={() => {\n            handleEditProfileClick();\n          }}\n          onAddPlace={() => {\n            handleAddPlaceClick();\n          }}\n          onCardClick={(card) => {\n            handleCardClick(card);\n          }}\n          />\n          <Footer />\n\n        </div>\n        <PopupWithForm\n          name={'edit-profile'}\n          title={'Редактировать профиль'}\n          children={\n            <>\n              <label>\n                <input\n                  className=\"form__input form__name\"\n                  id=\"input-profileName\"\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Имя\"\n                  defaultValue=\"Жак-Ив Кусто\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"40\"\n                />\n                <span\n                  className=\"form__input-error\"\n                  id=\"input-profileName-error\"\n                ></span>\n              </label>\n              <label>\n                <input\n                  className=\"form__input form__about-name\"\n                  id=\"input-profession\"\n                  name=\"about\"\n                  type=\"text\"\n                  placeholder=\"Профессия\"\n                  defaultValue=\"Исследователь океана\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"40\"\n                />\n                <span\n                  className=\"form__input-error\"\n                  id=\"input-profession-error\"\n                ></span>\n              </label>\n            </>\n          }\n          text={'Сохранить'}\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <PopupWithForm\n          name={'add-card'}\n          title={'Новое место'}\n          children={\n            <>\n              <label>\n                <input\n                  className=\"form__input form__name\"\n                  id=\"input-AddCard\"\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Название\"\n                  required\n                  minLength=\"1\"\n                  maxLength=\"30\"\n                />\n                <span className=\"form__input-error\" id=\"input-AddCard-error\"></span>\n              </label>\n              <label>\n                <input\n                  className=\"form__input form__about-name\"\n                  id=\"input-PlaceUrl\"\n                  name=\"link\"\n                  type=\"url\"\n                  placeholder=\"Ссылка на картинку\"\n                  required\n                />\n                <span className=\"form__input-error\" id=\"input-PlaceUrl-error\"></span>\n              </label>\n            </>\n          }\n          text={'Создать'}\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <PopupWithForm\n          name={'edit-avatar'}\n          title={'Обновить аватар'}\n          children={\n            <>\n              <label>\n                <input\n                  className=\"form__input form__about-name\"\n                  id=\"input-AvatarUrl\"\n                  name=\"avatar\"\n                  type=\"url\"\n                  placeholder=\"Ссылка на картинку\"\n                  required\n                />\n                <span className=\"form__input-error\" id=\"input-AvatarUrl-error\"></span>\n              </label>\n\n            </>\n          }\n          text={'Сохранить'}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <ImagePopup\n          name={'open-image'}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n          card={selectedCard}\n        />\n\n\n        <div className=\"popup popup_delete-card\">\n          <div className=\"popup__container\">\n            <button\n              type=\"reset\"\n              className=\"popup__close-button popup__close-button_delete-card\"\n              value=\"Закрыть\"\n            ></button>\n            <h2 className=\"popup__title\">Вы уверены?</h2>\n            <form className=\"form\" action=\"#\" name=\"formDeleteCard\" noValidate>\n              <button\n                type=\"submit\"\n                className=\"form__save-button form__save-button_action popup__button_type_confirm\"\n                value=\"Создать\"\n              >\n                Да\n            </button>\n            </form>\n          </div>\n        </div>\n        \n        \n\n        <template className=\"cards card-template_type_default\">\n          <div className=\"element\">\n            <button type=\"button\" className=\"element__delete\"></button>\n            <img className=\"element__img\" src=\"#\" alt=\"\" />\n            <div className=\"element__info\">\n              <h2 className=\"element__title\"></h2>\n              <div>\n                <button type=\"button\" className=\"element__heart\"></button>\n                <p className=\"element__sumLike\">0</p>\n              </div>\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}