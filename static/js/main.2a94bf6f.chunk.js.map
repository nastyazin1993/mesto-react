{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","onCardClick","card","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","item","cardLikeButtonClassName","type","onClick","src","link","alt","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","key","Footer","PopupWithForm","title","children","text","isOpen","onClose","onSubmit","value","action","noValidate","ImagePopup","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","method","then","_getResponseData","body","JSON","stringify","id","authorization","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","placeholder","required","minLength","maxLength","onChange","e","target","preventDefault","onUpdateAvatar","inputRef","useRef","ref","current","AddPlacePopup","inputNameRef","inputLinkRef","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","data","catch","err","console","log","Provider","handleCardClick","i","changeLikeCardStatus","newCard","newCards","deleteCard","newArrCards","filter","element","patchUserInfo","postCard","EditAvatarPopup","patchUserAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2a94bf6f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n          <div className=\"header__logo\"></div>\r\n        </header>\r\n  );\r\n}\r\n  \r\nexport default Header;","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card({ onCardClick, card, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const isOwn = (card.owner._id === currentUser._id);\r\n  const cardDeleteButtonClassName = (\r\n    `${isOwn ? 'element__delete' : 'element__delete_hidden'}`\r\n  );\r\n\r\n  const isLiked = card.likes.some((item) => item._id === currentUser._id);\r\n  \r\n  const cardLikeButtonClassName = (\r\n    `${isLiked ? 'element__heart_active' : 'element__heart'}`\r\n  );\r\n    function handleClick() {\r\n        onCardClick(card);\r\n      }\r\n      function handleDeleteClick() {\r\n        onCardDelete(card);\r\n      }\r\n      function handleLikeClick() {\r\n        onCardLike(card);\r\n      }\r\n\r\n  return (\r\n    \r\n          <div className=\"element\">\r\n            <button type=\"button\" className={`element__delete ${cardDeleteButtonClassName}`} onClick={handleDeleteClick}></button>\r\n            <img className=\"element__img\" src={card.link} alt={card.name} onClick={handleClick}/>\r\n            <div className=\"element__info\">\r\n                <h2 className=\"element__title\">{card.name}</h2>\r\n                <div>\r\n                <button type=\"button\" className={`element__heart ${cardLikeButtonClassName}`} onClick={handleLikeClick}></button>\r\n                <p className=\"element__sumLike\">{card.likes.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n  );\r\n \r\n}\r\n  \r\nexport default Card;","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, cards, onCardClick, onCardLike, onCardDelete }) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n          <section className=\"profile\">\r\n            <div className=\"profile__block\">\r\n              <div className=\"profile__avatar-conteiner\" >\r\n                <img\r\n                  className=\"profile__avatar\"\r\n                  src={currentUser.avatar}\r\n                  alt=\"аватар\"\r\n                />\r\n                <div className=\"profile__avatar-overlay\">\r\n                  <img className=\"profile__avatar-icon\" onClick={onEditAvatar}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile__info\">\r\n                <div className=\"profile__container-info\">\r\n                  <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n                  <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n                </div>\r\n                <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n          </section>\r\n          <section className=\"elements\">\r\n          \r\n          {cards && cards.map((card) =>\r\n            <Card \r\n              key={card._id} \r\n              card={card} \r\n              onCardClick={onCardClick}\r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete}\r\n            />\r\n          )}\r\n          \r\n          </section>\r\n        </main>\r\n  );\r\n \r\n}\r\n  \r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy;2020. Mesto Russia</p>\r\n        </footer>\r\n  );\r\n}\r\n  \r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, title, children, text, isOpen, onClose, onSubmit }) {\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen ? 'popup_open' : ''}`}>\r\n        <div className=\"popup__container\">\r\n          <button\r\n            type=\"reset\"\r\n            className=\"popup__close-button\"\r\n            value=\"Закрыть\"\r\n            onClick={onClose}\r\n          ></button>\r\n          <h2 className=\"popup__title\">{title}</h2>\r\n          <form className=\"form\" action=\"#\" name={`${name}`} noValidate onSubmit={onSubmit}>\r\n            {children}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"form__save-button form__save-button_action popup__button_type_confirm\"\r\n              value=\"Сохранить\"\r\n            >\r\n              {text}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n  \r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({name, isOpen, onClose, card }) {\r\n\r\n\r\n  return (\r\n    \r\n    <div className={`popup popup_type_${name} ${isOpen ? 'popup_open' : ''}`}>\r\n          <div className=\"popup__container popup__container_open-image\">\r\n            <button\r\n              type=\"reset\"\r\n              className=\"popup__close-button\"\r\n              value=\"Закрыть\"\r\n              onClick={onClose}\r\n            ></button>\r\n            <img className=\"popup__img\" src={card.link} alt={card.name} />\r\n            <h2 className=\"popup__title popup__title_open-image\">{card.name}</h2>\r\n          </div>\r\n        </div>\r\n  );\r\n \r\n}\r\n  \r\nexport default ImagePopup;","\r\nclass Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  _getResponseData(res){\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status} ....`));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  deleteCard(url) {\r\n    return fetch(`${this._url}cards/` + url, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  patchUserInfo(res) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(res\r\n      \r\n      ),\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  postCard({ name, link }) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      }),\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  getSumLikes() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  patchUserAvatar(link) {\r\n    return fetch(`${this._url}users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(link)\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  changeLikeCardStatus(url, id){\r\n    return fetch(`${this._url}cards/likes/` + url, {\r\n      method: (id) ? 'PUT' : 'DELETE',\r\n      headers: this._headers\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-15/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    authorization: \"4426ae37-9ae5-4337-9bcb-53d589589107\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\n\r\n\r\nfunction EditProfilePopup({onClose, isOpen, onUpdateUser}) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]); \r\n\r\n    function handleChangeName(e) {\r\n      setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n      setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n      e.preventDefault();\r\n      onUpdateUser({\r\n        name,\r\n        about: description,\r\n      });\r\n    }\r\n\r\n  return (\r\n    <PopupWithForm\r\n          name={'edit-profile'}\r\n          title={'Редактировать профиль'}\r\n          children={\r\n            <>\r\n              <label>\r\n                <input\r\n                  className=\"form__input form__name\"\r\n                  id=\"input-profileName\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Имя\"\r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"40\"\r\n                  value={name || ''}\r\n                  onChange={handleChangeName}\r\n                />\r\n                <span\r\n                  className=\"form__input-error\"\r\n                  id=\"input-profileName-error\"\r\n                ></span>\r\n              </label>\r\n              <label>\r\n                <input\r\n                  className=\"form__input form__about-name\"\r\n                  id=\"input-profession\"\r\n                  name=\"about\"\r\n                  type=\"text\"\r\n                  placeholder=\"Профессия\"\r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"40\"\r\n                  value={description || ''} \r\n                  onChange={handleChangeDescription}\r\n                />\r\n                <span\r\n                  className=\"form__input-error\"\r\n                  id=\"input-profession-error\"\r\n                ></span>\r\n              </label>\r\n            </>\r\n          }\r\n          text={'Сохранить'}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          onSubmit={handleSubmit}\r\n        />\r\n  );\r\n}\r\n  \r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\n\r\nfunction EditProfilePopup({onClose, isOpen, onUpdateAvatar}) {\r\n    const inputRef = React.useRef('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onUpdateAvatar({\r\n      avatar: inputRef.current.value\r\n    });\r\n  } \r\n\r\n  return (\r\n    <PopupWithForm\r\n          name={'edit-avatar'}\r\n          title={'Обновить аватар'}\r\n          children={\r\n            <>\r\n              <label>\r\n                <input\r\n                  className=\"form__input form__about-name\"\r\n                  id=\"input-AvatarUrl\"\r\n                  name=\"avatar\"\r\n                  type=\"url\"\r\n                  placeholder=\"Ссылка на картинку\"\r\n                  required\r\n                  ref={inputRef}\r\n                />\r\n                <span className=\"form__input-error\" id=\"input-AvatarUrl-error\"></span>\r\n              </label>\r\n\r\n            </>\r\n          }\r\n          text={'Сохранить'}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          onSubmit={handleSubmit}\r\n        />\r\n  );\r\n}\r\n  \r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\n\r\nfunction AddPlacePopup({onClose, isOpen, onAddPlace}) {\r\n  const inputNameRef = React.useRef('');\r\n  const inputLinkRef = React.useRef('');\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onAddPlace({\r\n      name: inputNameRef.current.value,\r\n      link: inputLinkRef.current.value\r\n    });\r\n  }  \r\n\r\n  return (\r\n    <PopupWithForm\r\n          name={'add-card'}\r\n          title={'Новое место'}\r\n          children={\r\n            <>\r\n              <label>\r\n                <input\r\n                  className=\"form__input form__name\"\r\n                  id=\"input-AddCard\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Название\"\r\n                  required\r\n                  minLength=\"1\"\r\n                  maxLength=\"30\"\r\n                  ref={inputNameRef}\r\n                />\r\n                <span className=\"form__input-error\" id=\"input-AddCard-error\"></span>\r\n              </label>\r\n              <label>\r\n                <input\r\n                  className=\"form__input form__about-name\"\r\n                  id=\"input-PlaceUrl\"\r\n                  name=\"link\"\r\n                  type=\"url\"\r\n                  placeholder=\"Ссылка на картинку\"\r\n                  required\r\n                  ref={inputLinkRef}\r\n                />\r\n                <span className=\"form__input-error\" id=\"input-PlaceUrl-error\"></span>\r\n              </label>\r\n            </>\r\n          }\r\n          text={'Создать'}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          onSubmit={handleSubmit}\r\n        />\r\n  );\r\n}\r\n  \r\nexport default AddPlacePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([ api.getUserInfo(), api.getInitialCards() ])\n      .then(([ res, data ]) => {\n        setCurrentUser(res)\n        setCards(data)\n\n    })  \n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n  function handleCardLike(card){\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((item) => item._id === card._id ? newCard : item);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n\n  }\n  function handleCardDelete(card){\n    \n      api.deleteCard(card._id)\n      .then(() => {\n        const newArrCards = cards.filter(element => element !== card);\n        setCards(newArrCards);\n      })\n      .catch((err) => console.log(err));\n  }\n  function handleUpdateUser(res){\n    api.patchUserInfo(res)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch((err) => console.log(err));\n  }\n  function handleUpdateAvatar(link) {\n    api.patchUserAvatar(link)\n        .then((link) => {\n          setCurrentUser(link);\n          closeAllPopups();\n        })\n        .catch((err) => console.log(err));\n  }\n  function handleAddPlaceSubmit(card) {\n    api.postCard(card)\n      .then((card) => {\n        setCards([card, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"App\">\n      <div className=\"root\">\n        <div className=\"page\">\n          <Header />\n          <Main \n          onEditAvatar={() => {\n            handleEditAvatarClick();\n          }}\n          onEditProfile={() => {\n            handleEditProfileClick();\n          }}\n          onAddPlace={() => {\n            handleAddPlaceClick();\n          }}\n          onCardClick={(card) => {\n            handleCardClick(card);\n          }}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n\n          />\n          <Footer />\n\n        </div>\n        <EditProfilePopup \n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}  /> \n        <AddPlacePopup \n          isOpen={isAddPlacePopupOpen} \n          onClose={closeAllPopups} \n          onAddPlace={handleAddPlaceSubmit} />\n\n        <EditAvatarPopup \n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} />\n\n        <ImagePopup\n          name={'open-image'}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n          card={selectedCard}\n        />\n        <PopupWithForm\n          name={'delete-card'}\n          title={'Вы уверены?'}\n          text={'Да'}\n         /* isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}*/\n        />\n        \n      </div>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}